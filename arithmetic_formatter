import re

"""arithmetic_arranger(["32 + 8", "1 - 3801", "9999 + 9999", "523 - 49"], True)

      32         1      9999      523
    +  8    - 3801    + 9999    -  49
    ----    ------    ------    -----
      40     -3800     19998      474 """
    
    
class c_operation:
    def calc(self, num_list,result= False):
        self.result = result
        self.num_list = num_list
        self.split_list = list()
        for i in range(len(self.num_list)):
            self.split_list = self.num_list[i]
            dash = len(self.split_list[0]) + len(self.split_list[1]) + len(self.split_list[2])
            pos0 = self.split_list[0]
            pos1 = self.split_list[1]
            pos2 = self.split_list[2]
            pos3 ='_' * dash
            if (self.split_list[1] == '-'):
                pos4 = self.split_list[1]
            else:
                pos4 = ""
            if ('+' in self.split_list):
                pos5 = int(self.split_list[0]) + int(self.split_list[2])
            else:
                pos5 = int(self.split_list[0]) - int(self.split_list[2])
        oper = ''' 
          {0}
      {1} {2}
      {3}
      {4}{5}
      '''.format(pos0,pos1,pos2,pos3,pos4,pos5)
        return(oper)
      
        

def arithmetic_arranger(problems, result= False):
    

   #Couting digits 
   def length_number(problems):
       valid = True
       for i in range(len(problems)):
           leng = problems[i]
           num_list = re.split("\s", leng)
           if (len(num_list[0]) > 4 or len(num_list[2]) > 4):
               valid = False
               break
       return(valid)     
   #Search for * or /  
   def valid_operands(problems):
       valid = True
       for i in range(len(problems)):
        oper = problems[i]
        if ('*' in oper or '/' in oper):
            valid = False
            break
       return(valid) 

        
   #is a digit?
   def is_number(problems):
       is_digit = True
       for i in range(len(problems)):
           just_digits = problems[i]
           digits_list = re.split("\s", just_digits)
           if (digits_list[0].isdigit() == False):
               is_digit = False
               break
           elif (digits_list[2].isdigit() == False):
               is_digit = False
               break
       return(is_digit)    
            
   
   def formater(problems):
        dlist = list() 
        for i in range(len(problems)):
            digs = problems[i]
            digs_list = re.split("\s", digs)
            dlist.append(digs_list)
        
        return(dlist)
        
   #Selector
   if (len(problems) > 5):
       arranged_problems = "Error: Too many problems."
   elif (valid_operands(problems)== False):
       arranged_problems = "Error: Operator must be '+' or '-'." 
   elif (length_number(problems) == False):
       arranged_problems = "Error: Numbers cannot be more than four digits."       
      
   elif (is_number(problems) == False):
       arranged_problems = "Error: Numbers must only contain digits." 
    
   else:
        num_list = formater(problems)
        #Object
        operation = c_operation()
        arranged_problems =   operation.calc(num_list)    
            
   
   return arranged_problems

print(arithmetic_arranger(["32 + 8", "1 - 3801", "9999 + 9999", "523 + 49"]))    

